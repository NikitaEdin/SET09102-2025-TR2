CREATE TABLE Roles (
    roleID INTEGER PRIMARY KEY AUTOINCREMENT,
    title TEXT NOT NULL,
    description TEXT,
    power INTEGER NOT NULL
);


CREATE TABLE Users (
    UserID INTEGER PRIMARY KEY AUTOINCREMENT,
    username TEXT NOT NULL,
    name TEXT NOT NULL,
    password TEXT NOT NULL,
    roleID INTEGER,
    FOREIGN KEY (roleID) REFERENCES Roles(roleID) ON DELETE SET NULL
);

CREATE TABLE Sites (
    site_id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT,
    latitude REAL,
    longitude REAL,
    elevation INTEGER,
    timezone TEXT,
    utc_offset INTEGER,
    type TEXT,
    zone TEXT,
    Agglomeration TEXT,
    Local_authority TEXT
);

CREATE TABLE Sensors (
    sensor_id INTEGER PRIMARY KEY AUTOINCREMENT,
    site_id INTEGER,
    sensor_type TEXT NOT NULL,
    sensor_url TEXT,
    deployment_date DATE,
    sensor_operational BOOLEAN
   -- configID INTEGER, Circular Dependency with Sensor
   -- FOREIGN KEY (configID) REFERENCES Configuration(ConfigID) ON DELETE SET NULL
);

CREATE TABLE Configuration (
    config_id INTEGER PRIMARY KEY AUTOINCREMENT,
    sensor_id INTEGER NOT NULL,
    min_measurement REAL NOT NULL,
    max_measurement REAL NOT NULL,
    type TEXT NOT NULL,
   -- unit TEXT NOT NULL, This isn't needed 
    firmware REAL, -- assuming firmware is a file, stored as BLOB (REAL Datetype for now)
    FOREIGN KEY (sensor_id) REFERENCES Sensors(sensor_id) ON DELETE CASCADE
);

CREATE TABLE Metadata (
    parameter TEXT PRIMARY KEY,
    category TEXT NOT NULL,
    symbol TEXT NOT NULL,
    unit TEXT NOT NULL,
    unit_description TEXT,
    measurement_freq TEXT NOT NULL,
    safe_limit REAL,
    reference_url TEXT,
    sensor_id INTEGER,
    FOREIGN KEY (sensor_id) REFERENCES Sensors(sensor_id) ON DELETE SET NULL
);

CREATE TABLE Measurements (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    datetime DATETIME NOT NULL,
    parameter TEXT NOT NULL,
    value REAL NOT NULL,
    unit TEXT NOT NULL,
    site_id INTEGER,
    FOREIGN KEY (site_id) REFERENCES Sites(site_id) ON DELETE SET NULL,
    FOREIGN KEY (parameter) REFERENCES Metadata(parameter) ON DELETE CASCADE
);
